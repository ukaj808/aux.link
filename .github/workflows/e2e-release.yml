name: Deploy to Remote Alpine Linux Host

on:
  push:
    branches:
      - master  # Trigger the workflow on pushes to the master branch

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Make working directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            mkdir -p /opt/augslink

      - name: Install ghcup (always update too)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            apt-get update -y
            apt-get install -y build-essential curl libffi-dev libgmp-dev libgmp10 libncurses-dev libncurses5 libtinfo5
            curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
            export PATH="$HOME/.ghcup/bin:$PATH"
            ghcup upgrade
            ghcup --version
    
      
      - name: Install GHC 9.2.8
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            export PATH="$HOME/.ghcup/bin:$PATH"
            ghcup install ghc 9.2.8
            ghcup set ghc 9.2.8

      - name: Install Node 20
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            export NODE_MAJOR=20
            apt-get install -y ca-certificates curl gnupg
            mkdir -p /etc/apt/keyrings
            curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
            echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
            apt-get update
            apt-get install -y nodejs

      - name: install yt-dlp 
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp
            sudo chmod a+rx /usr/local/bin/yt-dlp
      
      - name: install ffmpeg
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            apt-get update
            apt-get install -y ffmpeg
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy source code to host
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          overwrite: true
          source: ./
          target: /opt/augslink/augslink
      
      - name: Build Executable
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          command_timeout: 2h
          script: |
            export PATH="$HOME/.ghcup/bin:$PATH"
            cd /opt/augslink/augslink
            cabal update
            cabal build
            cabal install --overwrite-policy=always
      
      - name: Bundle static assets
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            export PATH="$HOME/.ghcup/bin:$PATH"
            cd /opt/augslink/augslink
            npm install
            npm run build
      
      - name: Run
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            export PATH="$HOME/.ghcup/bin:$PATH"
            cd /opt/augslink/augslink
            augslink -p dist-static -c /etc/letsencrypt/live/augs.link/fullchain.pem -p /etc/letsencrypt/live/augs.link/privkey.pem
