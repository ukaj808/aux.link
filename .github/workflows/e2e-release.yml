name: Deploy to Remote Alpine Linux Host

on:
  push:
    branches:
      - master  # Trigger the workflow on pushes to the master branch

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Make working directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            mkdir -p /opt/augslink

      - name: Install ghcup (always update too)
        uses: appleboy/ssh-action@master
        env: 
          PATH: "$HOME/.ghcup/bin:$PATH"
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: PATH
          script: |
            apk update
            apk add binutils-gold curl gcc g++ gmp-dev libc-dev libffi-dev make musl-dev ncurses-dev perl tar xz
            curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
            ghcup upgrade
            ghcup --version
    
      
      - name: Install GHC 9.2.7
        uses: appleboy/ssh-action@v1.0.0
        env: 
          PATH: "$HOME/.ghcup/bin:$PATH"
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: PATH
          script: |
            ghcup install ghc 9.2.7
            ghcup set ghc 9.2.7
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy source code to host
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: ./
          target: /opt/augslink/augslink
      
      - name: Build Executable
        uses: appleboy/ssh-action@v1.0.0
        env: 
          PATH: "$HOME/.ghcup/bin:$PATH"
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: PATH
          script: |
            cd /opt/augslink/augslink
            cabal update
            cabal build
            cabal install --overwrite-policy=always
